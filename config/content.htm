<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>W8</h1>
<p>網管筆記</p>
<p>IPv4 version 4 IP 4個區段，用( . )隔開  IPv6 version 6 IP 8個區段，用( : )隔開               version版本 edition版本</p>
<p><span>inter-net(網際，inter+network)==inter-national    protocol(協定)   tcp/ip==transmision control protocol/internet protocol       dns==domainname server 符號名稱伺服器               140.130.17.254(系gateway通道)    NAT network address translation   inter network(內部網路)192.168.*   ip address mapping 對應   route 路徑  remote login 遠端登入    packet封包   micor微  life cycle生命週期  microscope顯微鏡   definition定義<br/>tele scope望遠鏡   hierarchy架構  macro巨[比原子(atom)大]  circumstances某種環境下所處的狀態 atomic bomb原子彈 commit提交 terminology術語學 particular特別的 <br/>software軟體 firmware韌體 hardware硬體 assembly組合語言 URL統一資源定位</span></p>
<p><span>types of computer                                                                                                            1.super computertl 超級電腦  batch computation(批次運算)<br/>2.mainframe伺服器主機(cluster 叢集)<br/>3.server  伺服器  (實體、虛擬)<br/>4.Personal computer<br/>5.micor controller(微控制器) rasberry pi 樹莓派(小PC)  embedded嵌入式<br/>6.mobile phone</span></p>
<p>Y:反/data指的是Y槽的root根目錄  Y指的是Y槽，  &gt;為回應符號(pronpt sign)  反/為backslash反斜線  dir為顯示目錄內容的指令 cd tmp表示change directory到tmp子目錄<br/>git為分散式版次管理的指令名稱  git clone表示要使用git對遠端的倉儲url進行clone submodule子模組  phthon -m pip install flask-cors<br/>開個人網站:<br/>Y:l&gt;cd tmp<br/>&gt;cd wcmj2020<br/>&gt;cd cmsimde<br/>&gt;phthon wsgi.py<br/>PUSH<br/>Y:反/TMP反/WCMJ2020&gt;git add.<br/>&gt;git commit -m "add 添加之東西(可改)"<br/>&gt;git push</p><h1>Develop</h1>
<p><a data-saferedirecturl="https://www.google.com/url?q=https://github.com/mdecourse/cmsimde&amp;source=gmail&amp;ust=1587801632364000&amp;usg=AFQjCNEn5LOQAqH94CgckTSVT5Tc3URxUA" href="https://github.com/mdecourse/cmsimde" target="_blank">https://github.com/mdecourse/<wbr/>cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器<span> </span><a data-saferedirecturl="https://www.google.com/url?q=https://localhost:9443&amp;source=gmail&amp;ust=1587801632364000&amp;usg=AFQjCNGIEn2bJM0rN5kXfbniwodSN9m8rA" href="https://localhost:9443/" target="_blank">https://localhost:9443</a> 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<div class="yj6qo"></div>
<div class="adL"></div>
<div class="hi"></div>